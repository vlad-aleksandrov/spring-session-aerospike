description = 'Spring Session Aerospike'

apply from:   "${rootProject.projectDir}/gradle/java.gradle"
apply from:   "${rootProject.projectDir}/gradle/publish-maven.gradle"

jar {
    manifest.attributes["Created-By"] = "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
    manifest.attributes['Implementation-Title'] = 'spring-session-aerospike'
    manifest.attributes['Implementation-Version'] = project.version
}

dependencies {

    // Logging
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation "ch.qos.logback:logback-core:$logbackVersion"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
        
    // Spring Framework
    implementation("org.springframework:spring-core:$springVersion") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    implementation "org.springframework:spring-context-support:$springVersion"
    implementation "org.springframework:spring-context:$springVersion"
    implementation "org.springframework:spring-tx:$springVersion"
    implementation "org.springframework:spring-aop:$springVersion"
    implementation "org.springframework:spring-web:$springVersion"
    implementation "org.springframework:spring-websocket:$springVersion"
    implementation "org.springframework:spring-messaging:$springVersion"
    
    implementation ("org.springframework.session:spring-session:$springSessionVersion") {
        exclude group: "commons-logging", module: "commons-logging"        
    }
    implementation "javax.inject:javax.inject:$injectVersion"
    implementation "javax.annotation:javax.annotation-api:$javaxAnnotationVersion"

    implementation "javax.servlet:javax.servlet-api:$servletApiVersion"
    implementation "javax.servlet:javax.servlet-api:$servletApiVersion"
    implementation "com.esotericsoftware:kryo:$kryoVersion"
    implementation ("de.javakaffee:kryo-serializers:$kryoSerializersVersion") {
        exclude group: "com.esotericsoftware", module: "kryo"
    }
    implementation "de.ruedigermoeller:fst:$fstSerializersVersion"
    implementation "org.iq80.snappy:snappy:$snappyVersion"
    implementation ("cn.danielw:fast-object-pool:$fastObjectPoolVersion") {
        exclude group: "org.jacoco", module: "jacoco-maven-plugin"
    }

    // Aerospike Driver
    implementation "com.aerospike:aerospike-client:$aerospikeVersion"

    // Testing
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.hamcrest:hamcrest:$hamcrestVersion"
    testImplementation "org.springframework:spring-test:$springVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

test {
    useJUnitPlatform()
}

