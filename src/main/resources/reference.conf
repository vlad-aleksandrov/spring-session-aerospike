akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "ERROR"
  
  extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]
  
  actor {    
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }
  
  cluster {
    seed-nodes = [
      "akka.tcp://ManageSessions@127.0.0.1:2551", 
      "akka.tcp://ManageSessions@127.0.0.1:2552"]
 
    auto-down-unreachable-after = 30s
  }  

}

akka.contrib.cluster.pub-sub {
  # Actor name of the mediator actor, /user/distributedPubSubMediator
  name = distributedPubSubMediator
 
  # Start the mediator on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""
 
  # How often the DistributedPubSubMediator should send out gossip information
  gossip-interval = 1s
 
  # Removed entries are pruned after this duration
  removed-time-to-live = 120s
}


session.aerospike {
   # fetch timeout in seconds
   fetch-timeout = 5
   actors {
      serializer {
         # Kryo: v.a.org.springframework.store.kryo.KryoStoreSerializer
         # FastJava: v.a.org.springframework.store.fst.FastStoreSerializer
         class = v.a.org.springframework.store.fst.FastStoreSerializer
         compression = SNAPPY
         workers = 5
      }
      attributeserializer { 
         # Kryo: v.a.org.springframework.store.kryo.KryoStoreSerializer
         # FastJava: v.a.org.springframework.store.fst.FastStoreSerializer
         class = v.a.org.springframework.store.fst.FastStoreSerializer      
         workers = 13
      }      
      remover {
         workers = 20
      }
   }
}